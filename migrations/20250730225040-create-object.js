'use strict';

module.exports = {
  async up(queryInterface, Sequelize) {
    // ‚úÖ 1. –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É objects
    await queryInterface.createTable('objects', {
      id: { type: Sequelize.INTEGER, primaryKey: true, autoIncrement: true },

      type: {
        type: Sequelize.ENUM('–∑–∞–¥–∞—á–∞', '–≤–µ—Ö–∞'),
        allowNull: false,
        defaultValue: '–∑–∞–¥–∞—á–∞'
      },

      number: { type: Sequelize.STRING, allowNull: false },
      name: { type: Sequelize.STRING, allowNull: false },

      startDate: { type: Sequelize.DATE, allowNull: false },
      endDate: { type: Sequelize.DATE, allowNull: false },

      status: {
        type: Sequelize.ENUM('–û—Ç–∫—Ä—ã—Ç', '–í —Ä–∞–±–æ—Ç–µ', '–í—ã–ø–æ–ª–Ω–µ–Ω–æ', '–ó–∞–∫—Ä—ã—Ç'),
        defaultValue: '–û—Ç–∫—Ä—ã—Ç'
      },

      progress: { type: Sequelize.INTEGER, defaultValue: 0 },
      description: { type: Sequelize.TEXT },

      priority: {
        type: Sequelize.ENUM('–°–∞–º—ã–π –Ω–∏–∑–∫–∏–π', '–ù–∏–∑–∫–∏–π', '–°—Ä–µ–¥–Ω–∏–π', '–í—ã—Å–æ–∫–∏–π', '–°–∞–º—ã–π –≤—ã—Å–æ–∫–∏–π'),
        defaultValue: '–°—Ä–µ–¥–Ω–∏–π'
      },

      projectId: { type: Sequelize.INTEGER, allowNull: false },
      parentId: { type: Sequelize.INTEGER, references: { model: 'objects', key: 'id' }, onDelete: 'SET NULL' },
      creatorId: { type: Sequelize.INTEGER, references: { model: 'users', key: 'id' }, onDelete: 'SET NULL' },

      createdAt: { type: Sequelize.DATE, allowNull: false, defaultValue: Sequelize.fn('NOW') },
      updatedAt: { type: Sequelize.DATE, allowNull: false, defaultValue: Sequelize.fn('NOW') }
    });

    // ‚úÖ –ò–Ω–¥–µ–∫—Å—ã
    await queryInterface.addIndex('objects', ['projectId', 'number'], { unique: true });
    await queryInterface.addIndex('objects', ['parentId']);
    await queryInterface.addIndex('objects', ['status']);
    await queryInterface.addIndex('objects', ['priority']);

    // ‚úÖ 2. –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É object_members
    await queryInterface.createTable('object_members', {
      objectId: {
        type: Sequelize.INTEGER,
        references: { model: 'objects', key: 'id' },
        onDelete: 'CASCADE'
      },
      userId: {
        type: Sequelize.INTEGER,
        references: { model: 'users', key: 'id' },
        onDelete: 'CASCADE'
      }
    });

    // ‚úÖ 3. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã
    await queryInterface.dropTable('task_members');
    await queryInterface.dropTable('task_subtasks');
    await queryInterface.dropTable('tasks');
  },

  async down(queryInterface, Sequelize) {
    // üîÑ –û—Ç–∫–∞—Ç: –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–∞–±–ª–∏—Ü—ã
    await queryInterface.createTable('tasks', {
      id: { type: Sequelize.INTEGER, primaryKey: true, autoIncrement: true },
      name: Sequelize.STRING,
      number: Sequelize.INTEGER,
      startDate: Sequelize.DATE,
      endDate: Sequelize.DATE,
      status: Sequelize.ENUM('–æ—Ç–∫—Ä—ã—Ç–∞', '–≤ —Ä–∞–±–æ—Ç–µ', '–≤—ã–ø–æ–ª–Ω–µ–Ω–∞'),
      progress: Sequelize.INTEGER,
      description: Sequelize.TEXT,
      priority: Sequelize.ENUM('–Ω–∏–∑–∫–∏–π', '—Å—Ä–µ–¥–Ω–∏–π', '–≤—ã—Å–æ–∫–∏–π', '–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π'),
      projectId: Sequelize.INTEGER,
      assigneeId: Sequelize.INTEGER,
      creatorId: Sequelize.INTEGER,
      createdAt: Sequelize.DATE,
      updatedAt: Sequelize.DATE
    });

    await queryInterface.createTable('task_members', {
      taskId: Sequelize.INTEGER,
      userId: Sequelize.INTEGER
    });

    await queryInterface.createTable('task_subtasks', {
      taskId: Sequelize.INTEGER,
      subtaskId: Sequelize.INTEGER
    });

    await queryInterface.dropTable('object_members');
    await queryInterface.dropTable('objects');
  }
};
